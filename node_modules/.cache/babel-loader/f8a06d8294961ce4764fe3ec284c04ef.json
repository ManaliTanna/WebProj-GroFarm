{"ast":null,"code":"var _jsxFileName = \"C:\\\\MANALI\\\\PES\\\\SEM3\\\\WebTech\\\\PROJECTS\\\\Final\\\\src\\\\components\\\\chats.component.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../../src/index.css\";\nimport Navbar from \"./navbar.component\";\nimport { getFromStorage } from \"../utils/storage\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nconst Message = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"outgoing_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"sent_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, props.message.message), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"time_date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, props.message.updatedAt), \" \"));\n\nconst Message2 = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"incoming_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"received_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"received_withd_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }\n}, props.message.message), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"time_date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, props.message.updatedAt), \" \")));\n\nconst Chat = props => /*#__PURE__*/React.createElement(\"button\", {\n  className: \"chat-card\",\n  onClick: () => {\n    props.handleclick(props.chat);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: \"/userpics/\" + props.chat.userphoto,\n  class: \"chat-card-img mr-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"col-md-8 d-flex flex-column justify-content-between\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold text-left\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, props.chat.username), /*#__PURE__*/React.createElement(\"div\", {\n  className: \" d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n}, props.chat.lastmessage))));\n\nconst Chat2 = props => /*#__PURE__*/React.createElement(\"button\", {\n  className: \"chat-card\",\n  onClick: () => {\n    props.handleclick(props.chat);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: \"/userpics/\" + props.chat.userphoto,\n  class: \"chat-card-img mr-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"col-md-8 d-flex flex-column justify-content-between\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"bold text-left\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }\n}, props.chat.username), /*#__PURE__*/React.createElement(\"div\", {\n  className: \" d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }\n}, props.chat.lastmessage))), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"unreadmessages\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}, props.chat.unread));\n\nexport default class Chats extends Component {\n  constructor(props) {\n    super(props);\n    this.handleclick = this.handleclick.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.closechat = this.closechat.bind(this);\n    this.state = {\n      cookie: \"\",\n      chats: [],\n      selected: \"\",\n      chatclass: \"hidden\",\n      messages: \"\",\n      text: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage(\"the_main_app\");\n\n    if (obj && obj.cookie) {\n      const {\n        cookie\n      } = obj;\n      this.setState({\n        cookie: cookie\n      });\n      axios.get(\"http://localhost:5000/Chat/getchats/\" + cookie._id).then(response => {\n        console.log(response.data);\n        response.data.forEach(element => {\n          console.log(element.createdAt);\n        });\n        let data = response.data;\n        data.sort((a, b) => b.createdAt - a.createdAt);\n        this.setState({\n          chats: data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  onChangeText(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      cookie\n    } = getFromStorage(\"the_main_app\");\n\n    if (this.state.text == \"\") {\n      console.log(\"YOU CANT SEND EMPTY\");\n    } else {\n      axios.post(\"http://localhost:5000/Chat/addmessage\", {\n        idchat: this.state.selected.idchat,\n        iduser: cookie._id,\n        message: this.state.text\n      }).then(response => {\n        if (response.data == \"Message created\") {\n          axios.get(\"http://localhost:5000/Chat/\" + this.state.selected.idchat).then(response => {\n            this.setState({\n              messages: response.data\n            });\n            axios.get(\"http://localhost:5000/Chat/getchats/\" + cookie._id).then(response => {\n              let data = response.data;\n              data.sort((a, b) => b.createdAt - a.createdAt);\n              this.setState({\n                chats: data\n              });\n            });\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        text: \"\"\n      });\n    }\n  }\n\n  handleclick(info) {\n    if (this.state.selected != info) {\n      this.setState({\n        selected: info,\n        chatclass: \"chatscolumn2 d-flex flex-column justify-content-between col-md-7\"\n      });\n\n      if (info.unread != 0) {\n        this.state.chats.forEach(element => {\n          if (element == info) {\n            element.unread = 0;\n          }\n        });\n      }\n\n      axios.get(\"http://localhost:5000/Chat/\" + info.idchat).then(response => {\n        this.setState({\n          messages: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      axios.post(\"http://localhost:5000/Chat/readchat\", {\n        idchat: info.idchat,\n        iduser: info.userid\n      });\n    }\n  }\n\n  chatList() {\n    return this.state.chats.map(currentchat => {\n      if (currentchat.unread != 0 && currentchat.userid != this.state.cookie._id) {\n        return /*#__PURE__*/React.createElement(Chat2, {\n          chat: currentchat,\n          key: currentchat._id,\n          handleclick: this.handleclick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Chat, {\n          chat: currentchat,\n          key: currentchat._id,\n          handleclick: this.handleclick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }\n        });\n      }\n    });\n  }\n\n  MessageList() {\n    const allMsg = Array.from(this.state.messages);\n    return allMsg.map(currentproduct => {\n      let date = new Date(currentproduct.createdAt);\n      let month = date.getMonth() + 1;\n      let dt = date.getDate();\n      let hour = date.getHours();\n      let minutes = date.getMinutes();\n\n      if (dt < 10) {\n        dt = \"0\" + dt;\n      }\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      currentproduct.updatedAt = dt + \"-\" + month + \" | \" + hour + \" : \" + minutes;\n\n      if (currentproduct.iduser == this.state.cookie._id) {\n        return /*#__PURE__*/React.createElement(Message, {\n          message: currentproduct,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Message2, {\n          message: currentproduct,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  closechat() {\n    this.setState({\n      chatclass: \"hidden\",\n      selected: \"\"\n    });\n  }\n\n  render() {\n    const {\n      cookie\n    } = this.state;\n\n    if (!cookie) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, \"You must be logged in order to see chats\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, \"All chats\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, this.chatList()), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.chatclass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"goback\",\n        onClick: this.closechat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 19\n        }\n      }, \"X\"), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }\n      }, this.state.selected.username), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mesgs2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(ScrollToBottom, {\n        className: \"msg_history2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }, this.MessageList()))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"type_msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row input_msg_write\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"col-md-12\",\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message\",\n        className: \"col-md-9\",\n        value: this.state.text,\n        onChange: this.onChangeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        className: \"col-md-3 send\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 23\n        }\n      }))))))));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/MANALI/PES/SEM3/WebTech/PROJECTS/Final/src/components/chats.component.js"],"names":["React","Component","Link","axios","Navbar","getFromStorage","ScrollToBottom","Message","props","message","updatedAt","Message2","Chat","handleclick","chat","userphoto","username","lastmessage","Chat2","unread","Chats","constructor","bind","onSubmit","onChangeText","closechat","state","cookie","chats","selected","chatclass","messages","text","componentDidMount","obj","setState","get","_id","then","response","console","log","data","forEach","element","createdAt","sort","a","b","catch","error","e","target","value","preventDefault","post","idchat","iduser","info","userid","chatList","map","currentchat","MessageList","allMsg","Array","from","currentproduct","date","Date","month","getMonth","dt","getDate","hour","getHours","minutes","getMinutes","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../../src/index.css\";\r\nimport Navbar from \"./navbar.component\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\n\r\nconst Message = (props) => (\r\n  <div className=\"outgoing_msg\">\r\n    <div className=\"sent_msg\">\r\n      <p>{props.message.message}</p>\r\n      <span className=\"time_date\">{props.message.updatedAt}</span>{\" \"}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Message2 = (props) => (\r\n  <div className=\"incoming_msg\">\r\n    <div className=\"received_msg\">\r\n      <div className=\"received_withd_msg\">\r\n        <p>{props.message.message}</p>\r\n        <span className=\"time_date\">{props.message.updatedAt}</span>{\" \"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nconst Chat = (props) => (\r\n  <button\r\n    className=\"chat-card\"\r\n    onClick={() => {\r\n      props.handleclick(props.chat);\r\n    }}\r\n  >\r\n    <img src={\"/userpics/\" + props.chat.userphoto} class=\"chat-card-img mr-3\" />\r\n\r\n    <div className=\"col-md-8 d-flex flex-column justify-content-between\">\r\n      <h5 className=\"bold text-left\">{props.chat.username}</h5>\r\n      <div className=\" d-flex align-items-center\">\r\n        <span>{props.chat.lastmessage}</span>\r\n      </div>\r\n    </div>\r\n  </button>\r\n);\r\n\r\nconst Chat2 = (props) => (\r\n  <button\r\n    className=\"chat-card\"\r\n    onClick={() => {\r\n      props.handleclick(props.chat);\r\n    }}\r\n  >\r\n    <img src={\"/userpics/\" + props.chat.userphoto} class=\"chat-card-img mr-3\" />\r\n\r\n    <div className=\"col-md-8 d-flex flex-column justify-content-between\">\r\n      <h5 className=\"bold text-left\">{props.chat.username}</h5>\r\n      <div className=\" d-flex align-items-center\">\r\n        <span>{props.chat.lastmessage}</span>\r\n      </div>\r\n    </div>\r\n    <span className=\"unreadmessages\">{props.chat.unread}</span>\r\n  </button>\r\n);\r\n\r\nexport default class Chats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleclick = this.handleclick.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.closechat = this.closechat.bind(this);\r\n\r\n    this.state = {\r\n      cookie: \"\",\r\n      chats: [],\r\n\r\n      selected: \"\",\r\n      chatclass: \"hidden\",\r\n      messages: \"\",\r\n      text: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const obj = getFromStorage(\"the_main_app\");\r\n    if (obj && obj.cookie) {\r\n      const { cookie } = obj;\r\n      this.setState({ cookie: cookie });\r\n\r\n      axios\r\n        .get(\"http://localhost:5000/Chat/getchats/\" + cookie._id)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          response.data.forEach((element) => {\r\n            console.log(element.createdAt);\r\n          });\r\n          let data = response.data;\r\n          data.sort((a, b) => b.createdAt - a.createdAt);\r\n\r\n          this.setState({ chats: data });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  onChangeText(e) {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { cookie } = getFromStorage(\"the_main_app\");\r\n\r\n    if (this.state.text == \"\") {\r\n      console.log(\"YOU CANT SEND EMPTY\");\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/Chat/addmessage\", {\r\n          idchat: this.state.selected.idchat,\r\n          iduser: cookie._id,\r\n          message: this.state.text,\r\n        })\r\n        .then((response) => {\r\n          if (response.data == \"Message created\") {\r\n            axios\r\n              .get(\"http://localhost:5000/Chat/\" + this.state.selected.idchat)\r\n              .then((response) => {\r\n                this.setState({\r\n                  messages: response.data,\r\n                });\r\n\r\n                axios\r\n                  .get(\"http://localhost:5000/Chat/getchats/\" + cookie._id)\r\n                  .then((response) => {\r\n                    let data = response.data;\r\n                    data.sort((a, b) => b.createdAt - a.createdAt);\r\n\r\n                    this.setState({ chats: data });\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      this.setState({\r\n        text: \"\",\r\n      });\r\n    }\r\n  }\r\n  handleclick(info) {\r\n    if (this.state.selected != info) {\r\n      this.setState({\r\n        selected: info,\r\n        chatclass:\r\n          \"chatscolumn2 d-flex flex-column justify-content-between col-md-7\",\r\n      });\r\n      if (info.unread != 0) {\r\n        this.state.chats.forEach((element) => {\r\n          if (element == info) {\r\n            element.unread = 0;\r\n          }\r\n        });\r\n      }\r\n      axios\r\n        .get(\"http://localhost:5000/Chat/\" + info.idchat)\r\n        .then((response) => {\r\n          this.setState({\r\n            messages: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      axios.post(\"http://localhost:5000/Chat/readchat\", {\r\n        idchat: info.idchat,\r\n        iduser: info.userid,\r\n      });\r\n    }\r\n  }\r\n\r\n  chatList() {\r\n    return this.state.chats.map((currentchat) => {\r\n      if (\r\n        currentchat.unread != 0 &&\r\n        currentchat.userid != this.state.cookie._id\r\n      ) {\r\n        return (\r\n          <Chat2\r\n            chat={currentchat}\r\n            key={currentchat._id}\r\n            handleclick={this.handleclick}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <Chat\r\n            chat={currentchat}\r\n            key={currentchat._id}\r\n            handleclick={this.handleclick}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n  MessageList() {\r\n    const allMsg = Array.from(this.state.messages);\r\n\r\n    return allMsg.map((currentproduct) => {\r\n      let date = new Date(currentproduct.createdAt);\r\n      let month = date.getMonth() + 1;\r\n      let dt = date.getDate();\r\n      let hour = date.getHours();\r\n      let minutes = date.getMinutes();\r\n\r\n      if (dt < 10) {\r\n        dt = \"0\" + dt;\r\n      }\r\n      if (month < 10) {\r\n        month = \"0\" + month;\r\n      }\r\n      currentproduct.updatedAt =\r\n        dt + \"-\" + month + \" | \" + hour + \" : \" + minutes;\r\n\r\n      if (currentproduct.iduser == this.state.cookie._id) {\r\n        return <Message message={currentproduct} />;\r\n      } else {\r\n        return <Message2 message={currentproduct} />;\r\n      }\r\n    });\r\n  }\r\n\r\n  closechat() {\r\n    this.setState({ chatclass: \"hidden\" ,selected:\"\"});\r\n    \r\n  }\r\n  render() {\r\n    const { cookie } = this.state;\r\n    if (!cookie) {\r\n      return (\r\n        <div className=\"gray\">\r\n          <Navbar />\r\n          <div className=\"container mt-5\">\r\n            You must be logged in order to see chats\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"gray\">\r\n          <Navbar />\r\n          <div className=\"container mt-5\">\r\n            <div className=\"row mb-5\">\r\n              <h3>All chats</h3>\r\n            </div>\r\n            <div className=\"row d-flex justify-content-between\">\r\n              <div className=\"col-md-4\">{this.chatList()}</div>\r\n              <div className={this.state.chatclass}>\r\n                <div className=\"chat-body\">\r\n                  <button className=\"goback\" onClick={this.closechat}>X</button>\r\n                  <h3 className=\"text-center mt-4\">\r\n                    {this.state.selected.username}\r\n                  </h3>\r\n                  <div>\r\n                    <div>\r\n                      <div className=\"mesgs2\">\r\n                        <ScrollToBottom className=\"msg_history2\">\r\n                          {this.MessageList()}\r\n                        </ScrollToBottom>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"type_msg\">\r\n                  <div className=\"row input_msg_write\">\r\n                    <form className=\"col-md-12\" onSubmit={this.onSubmit}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Type a message\"\r\n                        className=\"col-md-9\"\r\n                        value={this.state.text}\r\n                        onChange={this.onChangeText}\r\n                      />\r\n\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Send\"\r\n                        className=\"col-md-3 send\"\r\n                      />\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}