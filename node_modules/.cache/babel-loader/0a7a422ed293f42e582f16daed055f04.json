{"ast":null,"code":"var _jsxFileName = \"C:\\\\MANALI\\\\PES\\\\SEM3\\\\WebTech\\\\MERN-project\\\\src\\\\components\\\\edit-user.component.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../components/navbar.component\";\nimport { getFromStorage, setInStorage } from \"../utils/storage\";\nexport default class EditUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fileSelectedHandler = event => {\n      this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeBio = this.onChangeBio.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeRole = this.onChangeRole.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      cookie: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      bio: \"\",\n      location: \"\",\n      role: \"\",\n      file: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage(\"the_main_app\");\n\n    if (obj && obj.cookie) {\n      const {\n        cookie\n      } = obj;\n      console.log(cookie);\n      this.setState({\n        cookie: cookie,\n        username: cookie.username,\n        email: cookie.email,\n        password: cookie.password,\n        bio: cookie.bio,\n        location: cookie.location,\n        role: cookie.role\n      });\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeBio(e) {\n    this.setState({\n      bio: e.target.value\n    });\n  }\n\n  onChangeLocation(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  onChangeRole(e) {\n    this.setState({\n      role: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/users/verify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.cookie.username,\n        email: this.state.cookie.email,\n        password: this.state.cookie.password,\n        role: this.state.cookie.role\n      })\n    }).then(res => res.json()).then(json => {\n      if (json.success) {\n        console.log(\"user verified\");\n\n        if (this.state.file) {\n          const fd = new FormData();\n          let aux = this.state.file.name.split(\".\");\n          fd.append(\"files\", this.state.file, this.state.cookie._id + \".\" + aux[1]);\n          axios.post(\"http://localhost:5000/Upload/upload\", fd).then(res => {\n            console.log(res);\n          });\n          const user = {\n            _id: this.state.cookie._id,\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            location: this.state.location,\n            bio: this.state.bio,\n            role: this.state.role,\n            photo: this.state.cookie._id + \".\" + aux[1]\n          };\n          fetch(\"http://localhost:5000/users/update/\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n          }).then(res => res.json()).then(json => {\n            if (json.success) {\n              setInStorage(\"the_main_app\", {\n                cookie: user\n              });\n              window.location = \"/login\";\n            }\n          });\n        } else {\n          const user = {\n            _id: this.state.cookie._id,\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            location: this.state.location,\n            bio: this.state.bio,\n            role: this.state.role,\n            photo: this.state.cookie.photo\n          };\n          fetch(\"http://localhost:5000/users/update/\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n          }).then(res => res.json()).then(json => {\n            if (json.success) {\n              setInStorage(\"the_main_app\", {\n                cookie: user\n              });\n              window.location = \"/login\";\n            }\n          });\n        }\n      } else {\n        console.log(\"Verification failed\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      cookie\n    } = this.state;\n\n    if (!cookie) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, \"You are not logged\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, \"Edit user\"), /*#__PURE__*/React.createElement(\"form\", {\n        enctype: \"multipart/form-data\",\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.username,\n        onChange: this.onChangeUsername,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, \"Email : \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: this.state.email,\n        onChange: this.onChangeEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }\n      }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.password,\n        onChange: this.onChangePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, \"Bio: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.bio,\n        onChange: this.onChangeBio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, \"location: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.location,\n        onChange: this.onChangeLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, \"Role: \"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.role,\n        onChange: this.onChangeRole,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, \"Client\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, \"Farmer\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update User\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }\n      }, \"image: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/x-png,image/jpeg\",\n        onChange: this.fileSelectedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Link, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, \"Go back\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/MANALI/PES/SEM3/WebTech/MERN-project/src/components/edit-user.component.js"],"names":["React","Component","axios","Link","Navbar","getFromStorage","setInStorage","EditUser","constructor","props","fileSelectedHandler","event","setState","file","target","files","onChangeUsername","bind","onChangeEmail","onChangePassword","onChangeBio","onChangeLocation","onChangeRole","onSubmit","state","cookie","username","email","password","bio","location","role","componentDidMount","obj","console","log","e","value","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","success","fd","FormData","aux","name","split","append","_id","post","user","photo","window","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/navbar.component\";\r\n\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\";\r\n\r\nexport default class EditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeBio = this.onChangeBio.bind(this);\r\n    this.onChangeLocation = this.onChangeLocation.bind(this);\r\n    this.onChangeRole = this.onChangeRole.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      cookie: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      bio: \"\",\r\n      location: \"\",\r\n      role: \"\",\r\n      file: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const obj = getFromStorage(\"the_main_app\");\r\n\r\n    if (obj && obj.cookie) {\r\n      const { cookie } = obj;\r\n      console.log(cookie);\r\n      this.setState({\r\n        cookie: cookie,\r\n        username: cookie.username,\r\n        email: cookie.email,\r\n        password: cookie.password,\r\n        bio: cookie.bio,\r\n        location: cookie.location,\r\n        role: cookie.role,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeBio(e) {\r\n    this.setState({\r\n      bio: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeLocation(e) {\r\n    this.setState({\r\n      location: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeRole(e) {\r\n    this.setState({\r\n      role: e.target.value,\r\n    });\r\n  }\r\n\r\n  fileSelectedHandler = (event) => {\r\n    this.setState({\r\n      file: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    fetch(\"http://localhost:5000/users/verify\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: this.state.cookie.username,\r\n        email: this.state.cookie.email,\r\n        password: this.state.cookie.password,\r\n        role: this.state.cookie.role,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.success) {\r\n          console.log(\"user verified\");\r\n\r\n          if (this.state.file) {\r\n            const fd = new FormData();\r\n            let aux = this.state.file.name.split(\".\");\r\n            fd.append(\r\n              \"files\",\r\n              this.state.file,\r\n              this.state.cookie._id + \".\" + aux[1]\r\n            );\r\n            axios\r\n              .post(\"http://localhost:5000/Upload/upload\", fd)\r\n              .then((res) => {\r\n                console.log(res);\r\n              });\r\n\r\n            const user = {\r\n              _id: this.state.cookie._id,\r\n              username: this.state.username,\r\n              email: this.state.email,\r\n              password: this.state.password,\r\n              location: this.state.location,\r\n              bio: this.state.bio,\r\n              role: this.state.role,\r\n              photo: this.state.cookie._id + \".\" + aux[1],\r\n            };\r\n\r\n            fetch(\"http://localhost:5000/users/update/\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(user),\r\n            })\r\n              .then((res) => res.json())\r\n              .then((json) => {\r\n                if (json.success) {\r\n                  setInStorage(\"the_main_app\", { cookie: user });\r\n                  window.location = \"/login\";\r\n                }\r\n              });\r\n          } else {\r\n            const user = {\r\n              _id: this.state.cookie._id,\r\n              username: this.state.username,\r\n              email: this.state.email,\r\n              password: this.state.password,\r\n              location: this.state.location,\r\n              bio: this.state.bio,\r\n              role: this.state.role,\r\n              photo: this.state.cookie.photo,\r\n            };\r\n\r\n            fetch(\"http://localhost:5000/users/update/\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(user),\r\n            })\r\n              .then((res) => res.json())\r\n              .then((json) => {\r\n                if (json.success) {\r\n                  setInStorage(\"the_main_app\", { cookie: user });\r\n                  window.location = \"/login\";\r\n                }\r\n              });\r\n          }\r\n        } else {\r\n          console.log(\"Verification failed\");\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { cookie } = this.state;\r\n    if (!cookie) {\r\n      return (\r\n        <div>\r\n          <Navbar />\r\n          <div className=\"container mt-5\">You are not logged</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Navbar />\r\n          <div className=\"container mt-5\">\r\n            <h3>Edit user</h3>\r\n            <form enctype=\"multipart/form-data\" onSubmit={this.onSubmit}>\r\n              <label>Username: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n              />\r\n\r\n              <label>Email : </label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n              />\r\n\r\n              <label>Password: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n              />\r\n\r\n              <label>Bio: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.bio}\r\n                onChange={this.onChangeBio}\r\n              />\r\n\r\n              <label>location: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.location}\r\n                onChange={this.onChangeLocation}\r\n              />\r\n\r\n              <label>Role: </label>\r\n\r\n              <select\r\n                className=\"form-control\"\r\n                value={this.state.role}\r\n                onChange={this.onChangeRole}\r\n              >\r\n                <option>Client</option>\r\n                <option>Farmer</option>\r\n              </select>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update User\"\r\n                  className=\"btn btn-primary\"\r\n                />\r\n              </div>\r\n              <label>image: </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/x-png,image/jpeg\"\r\n                onChange={this.fileSelectedHandler}\r\n              />\r\n            </form>\r\n            <Link to=\"/login\">Go back</Link>\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}