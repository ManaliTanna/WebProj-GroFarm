{"ast":null,"code":"var _jsxFileName = \"C:\\\\MANALI\\\\PES\\\\SEM3\\\\WebTech\\\\PROJECTS\\\\MERN-project\\\\src\\\\components\\\\chat.component.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../../src/index.css\";\nimport Navbar from \"./navbar.component\";\nimport { getFromStorage } from \"../utils/storage\";\n\nconst Message = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"outgoing_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"sent_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n}, props.message.message), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"time_date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, props.message.updatedAt), \" \"));\n\nconst Message2 = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"incoming_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"received_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"received_withd_msg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, props.message.message), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"time_date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, props.message.updatedAt), \" \")));\n\nexport default class ProductsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.state = {\n      chatid: \"\",\n      cookie: \"\",\n      username: \"\",\n      text: \"\",\n      messages: []\n    };\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      cookie\n    } = getFromStorage(\"the_main_app\");\n\n    if (this.state.text == \"\") {\n      console.log(\"YOU CANT SEND EMPTY\");\n    } else {\n      console.log(\"________________________ STATE ________________________\");\n      console.log(this.state.chatid);\n\n      if (!this.state.chatid) {\n        console.log(\"________________________ No Chat found ________________________\");\n        axios.post(\"http://localhost:5000/Chat/add\", {\n          iduser1: cookie._id,\n          iduser2: this.props.match.params.id,\n          msg: this.state.text\n        }).then(response => {\n          if (response.data == \"Message created\") {\n            window.location = \"/chat/\" + this.props.match.params.id;\n          }\n\n          this.setState({\n            chatid: response.data.messages,\n            username: response.data.username\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        console.log(\"________________________ Chat found ________________________\");\n        console.log(\"chat id -> \" + this.state.chatid);\n        axios.post(\"http://localhost:5000/Chat/addmessage\", {\n          idchat: this.state.chatid,\n          iduser: cookie._id,\n          message: this.state.text\n        }).then(response => {\n          if (response.data == \"Message created\") {\n            window.location = \"/chat/\" + this.props.match.params.id;\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      } // this.setState({\n      //   text: \"\",\n      // });\n\n    }\n  }\n\n  componentDidMount() {\n    const {\n      cookie\n    } = getFromStorage(\"the_main_app\");\n    this.setState({\n      cookie: cookie\n    });\n    axios.post(\"http://localhost:5000/Chat/\", {\n      iduser1: cookie._id,\n      iduser2: this.props.match.params.id\n    }).then(response => {\n      console.log(response.data);\n      console.log(\"Saving chatid -> \" + response.data.messages);\n\n      if (response.data != null) {\n        this.setState({\n          chatid: response.data.messages\n        });\n        console.log(\"SAVED AS -> \" + this.state.chatid);\n        axios.get(\"http://localhost:5000/Chat/\" + response.data.messages).then(response => {\n          console.log(\"idk mnaybe ->\" + response.data.username);\n          console.log(\"SAVED AS -> \" + this.state.chatid);\n          console.log(response.data);\n          this.setState({\n            messages: response.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      this.setState({\n        chatid: response.data.messages,\n        username: response.data.username,\n        messages: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeText(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  MessageList() {\n    const allMsg = Array.from(this.state.messages);\n    console.log();\n    return allMsg.map(currentproduct => {\n      let date = new Date(currentproduct.createdAt);\n      let month = date.getMonth() + 1;\n      let dt = date.getDate();\n      let hour = date.getHours();\n      let minutes = date.getMinutes();\n\n      if (dt < 10) {\n        dt = \"0\" + dt;\n      }\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      currentproduct.updatedAt = dt + \"-\" + month + \" | \" + hour + \" : \" + minutes;\n      console.log(currentproduct.createdAt);\n\n      if (currentproduct.iduser == this.state.cookie._id) {\n        return /*#__PURE__*/React.createElement(Message, {\n          message: currentproduct,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Message2, {\n          message: currentproduct,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 16\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, this.state.username), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mesgs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msg_history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, this.MessageList()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type_msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row input_msg_write\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col-md-12\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      className: \"col-md-9\",\n      value: this.state.text,\n      onChange: this.onChangeText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: \"col-md-3 send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 23\n      }\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/MANALI/PES/SEM3/WebTech/PROJECTS/MERN-project/src/components/chat.component.js"],"names":["React","Component","axios","Navbar","getFromStorage","Message","props","message","updatedAt","Message2","ProductsList","constructor","onSubmit","bind","onChangeText","state","chatid","cookie","username","text","messages","e","preventDefault","console","log","post","iduser1","_id","iduser2","match","params","id","msg","then","response","data","window","location","setState","catch","error","idchat","iduser","componentDidMount","get","target","value","MessageList","allMsg","Array","from","map","currentproduct","date","Date","createdAt","month","getMonth","dt","getDate","hour","getHours","minutes","getMinutes","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../src/index.css\";\r\nimport Navbar from \"./navbar.component\";\r\nimport { getFromStorage } from \"../utils/storage\";\r\n\r\nconst Message = (props) => (\r\n  <div className=\"outgoing_msg\">\r\n    <div className=\"sent_msg\">\r\n      <p>{props.message.message}</p>\r\n      <span className=\"time_date\">{props.message.updatedAt}</span>{\" \"}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Message2 = (props) => (\r\n  <div className=\"incoming_msg\">\r\n    <div className=\"received_msg\">\r\n      <div className=\"received_withd_msg\">\r\n        <p>{props.message.message}</p>\r\n        <span className=\"time_date\">{props.message.updatedAt}</span>{\" \"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default class ProductsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.state = {\r\n      chatid: \"\",\r\n      cookie: \"\",\r\n      username: \"\",\r\n      text: \"\",\r\n      messages: [],\r\n    };\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { cookie } = getFromStorage(\"the_main_app\");\r\n\r\n    if (this.state.text == \"\") {\r\n      console.log(\"YOU CANT SEND EMPTY\");\r\n    } else {\r\n      console.log(\"________________________ STATE ________________________\");\r\n      console.log(this.state.chatid);\r\n      if (!this.state.chatid) {\r\n        console.log(\r\n          \"________________________ No Chat found ________________________\"\r\n        );\r\n        axios\r\n          .post(\"http://localhost:5000/Chat/add\", {\r\n            iduser1: cookie._id,\r\n            iduser2: this.props.match.params.id,\r\n            msg: this.state.text,\r\n          })\r\n          .then((response) => {\r\n            if (response.data == \"Message created\") {\r\n              window.location = \"/chat/\" + this.props.match.params.id;\r\n            }\r\n            this.setState({\r\n              chatid: response.data.messages,\r\n              username: response.data.username,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        console.log(\r\n          \"________________________ Chat found ________________________\"\r\n        );\r\n        console.log(\"chat id -> \" + this.state.chatid);\r\n        axios\r\n          .post(\"http://localhost:5000/Chat/addmessage\", {\r\n            idchat: this.state.chatid,\r\n            iduser: cookie._id,\r\n            message: this.state.text,\r\n          })\r\n          .then((response) => {\r\n            if (response.data == \"Message created\") {\r\n              window.location = \"/chat/\" + this.props.match.params.id;\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      // this.setState({\r\n      //   text: \"\",\r\n      // });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { cookie } = getFromStorage(\"the_main_app\");\r\n\r\n    this.setState({\r\n      cookie: cookie,\r\n    });\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/Chat/\", {\r\n        iduser1: cookie._id,\r\n        iduser2: this.props.match.params.id,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(\"Saving chatid -> \" + response.data.messages);\r\n        if (response.data != null) {\r\n          this.setState({\r\n            chatid: response.data.messages,\r\n          });\r\n          console.log(\"SAVED AS -> \" + this.state.chatid);\r\n          axios\r\n            .get(\"http://localhost:5000/Chat/\" + response.data.messages)\r\n            .then((response) => {\r\n              console.log(\"idk mnaybe ->\" + response.data.username);\r\n              console.log(\"SAVED AS -> \" + this.state.chatid);\r\n              console.log(response.data);\r\n              this.setState({\r\n                messages: response.data,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n        this.setState({\r\n          chatid: response.data.messages,\r\n          username: response.data.username,\r\n          messages: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeText(e) {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  }\r\n\r\n  MessageList() {\r\n    const allMsg = Array.from(this.state.messages);\r\n    console.log();\r\n    return allMsg.map((currentproduct) => {\r\n      let date = new Date(currentproduct.createdAt);\r\n      let month = date.getMonth() + 1;\r\n      let dt = date.getDate();\r\n      let hour = date.getHours();\r\n      let minutes = date.getMinutes();\r\n\r\n      if (dt < 10) {\r\n        dt = \"0\" + dt;\r\n      }\r\n      if (month < 10) {\r\n        month = \"0\" + month;\r\n      }\r\n      currentproduct.updatedAt = dt + \"-\" + month + \" | \" + hour + \" : \" + minutes;\r\n\r\n      console.log(currentproduct.createdAt);\r\n\r\n      if (currentproduct.iduser == this.state.cookie._id) {\r\n        return <Message message={currentproduct} />;\r\n      } else {\r\n        return <Message2 message={currentproduct} />;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n\r\n        <div className=\"container\">\r\n          <h3 className=\"text-center mt-5\">{this.state.username}</h3>\r\n          <div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <div className=\"mesgs\">\r\n                <div className=\"msg_history\">{this.MessageList()}</div>\r\n                <div className=\"type_msg\">\r\n                  <div className=\"row input_msg_write\">\r\n                    <form className=\"col-md-12\" onSubmit={this.onSubmit}>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Type a message\"\r\n                        className=\"col-md-9\"\r\n                        value={this.state.text}\r\n                        onChange={this.onChangeText}\r\n                      />\r\n\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Send\"\r\n                        className=\"col-md-3 send\"\r\n                      />\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}